// 引入模块
import app from '../app.js';
import debugModule from 'debug';
import http from 'http';
import dotenv from 'dotenv'; // 新增

// 加载环境变量
dotenv.config(); // 加载 .env 文件中的配置

const debug = debugModule('backend:server');

// 设置端口
const port = normalizePort(process.env.PORT || '3000'); // 优先使用环境变量 PORT
app.set('port', port);

// 创建 HTTP 服务器
const server = http.createServer(app);

// 监听指定的端口
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */
function normalizePort(val) {
    const port = parseInt(val, 10);
    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
}

/**
 * Event listener for HTTP server "error" event.
 */
function onError(error) {
    if (error.syscall !== 'listen') {
        throw error;
    }

    const bind = typeof port === 'string'
        ? 'Pipe ' + port
        : 'Port ' + port;

    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
            break;
        default:
            throw error;
    }
}

/**
 * Event listener for HTTP server "listening" event.
 */
function onListening() {
    const addr = server.address();
    const bind = typeof addr === 'string'
        ? 'pipe ' + addr
        : 'port ' + addr.port;
    debug('Listening on ' + bind);
    console.log(`服务器正在运行在 http://localhost:${addr.port}`);
}
